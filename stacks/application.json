{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description": "AWS CloudFormation Template for Hydra-in-a-Box; Version 0.1",

  "Parameters" : {
    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the ECS instances"
    },
    "SecurityGroups": {
      "Type": "List<AWS::EC2::SecurityGroup::GroupName>",
      "Description": "A list of security group names, such as my-sg-ab.",
      "Default": "default"
    },
    "SubnetID": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "List of an existing subnet IDs to use for the load balancer and auto scaling group"
    },
    "S3Bucket": {
      "Type": "String",
      "Description": "S3 bucket to the deployment artifacts",
      "Default": "hybox-deployment-artifacts" 
    },
    "PrivateZoneName" : {
      "Description" : "Route53 zone to create an alias in",
      "Type" : "String"
    },
    "PublicZoneName" : {
      "Description" : "Route53 zone to create an alias in",
      "Type" : "String"
    },
    "DatabaseUsername": {
      "Type": "String",
      "Description": "Database Root Username",
      "Default": "root"
    },
    "DatabasePassword": {
      "NoEcho": "true",
      "Type": "String",
      "Description": "Password for the DB Root User"
    },
    "ZookeeperHosts": {
      "Type": "String",
      "Description": "A list of zookeeper host IP + ports",
      "Default": "127.0.0.1:2181"
    },
    "SecretKeyBase" : {
      "NoEcho": "true",
      "Description" : "Secret key for Rails",
      "Type" : "String"
    }
  },
  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "Deployment Artifacts" },
          "Parameters" : [ "S3Bucket" ]
        },
        {
          "Label" : { "default" : "Network Configuration" },
          "Parameters" : [ "SubnetID", "SecurityGroups", "PublicZoneName", "PrivateZoneName" ]
        },
        {
          "Label" : { "default":"Configuration" },
          "Parameters" : [ "DatabaseUsername", "DatabasePassword", "ZookeeperHosts", "SecretKeyBase" ]
        }
      ]
    }
  },
  "Resources" : {
    "fcrepo" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "Parameters" : {
          "KeyName" : { "Fn::Join" : [",", [{ "Ref" : "KeyName" }]] },
          "S3Bucket" : { "Ref" : "S3Bucket" },
          "SecurityGroups" : { "Fn::Join" : [",", { "Ref" : "SecurityGroups" }] },
          "HostedZoneName" : { "Ref" : "PrivateZoneName" }
        },
        "TemplateURL" : { "Fn::Join" : ["", ["https://s3.amazonaws.com/", { "Ref" : "S3Bucket" }, "/stacks/fcrepo.json"]] }
      }
    },
    "solr" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "Parameters" : {
          "KeyName" : { "Fn::Join" : [",", [{ "Ref" : "KeyName" }]] },
          "HostedZoneName" : { "Ref" : "PrivateZoneName" },
          "SubnetID" : { "Fn::Join" : [",", { "Ref" : "SubnetID" }] },
          "ZookeeperHosts" : { "Ref" : "ZookeeperHosts" }
        },
        "TemplateURL" : { "Fn::Join" : ["", ["https://s3.amazonaws.com/", { "Ref" : "S3Bucket" }, "/stacks/solr.json"]] }
      }
    },
    "redis" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : ["", ["https://s3.amazonaws.com/", { "Ref" : "S3Bucket" }, "/stacks/redis.json"]] }
      }
    },
    "database" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "Parameters" : {
          "SecurityGroups" : { "Fn::Join" : [",", { "Ref" : "SecurityGroups" }] },
          "MasterUsername" : { "Ref" : "DatabaseUsername" },
          "MasterUserPassword" : { "Ref" : "DatabasePassword" }
        },
        "TemplateURL" : { "Fn::Join" : ["", ["https://s3.amazonaws.com/", { "Ref" : "S3Bucket" }, "/stacks/postgres.json"]] }
      }
    },
    "hybox" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "Parameters" : {
          "EBApplicationName" : { "Ref" : "AWS::StackName" },
          "KeyName" : { "Fn::Join" : [",", [{ "Ref" : "KeyName" }]] },
          "S3Bucket" : { "Ref" : "S3Bucket" },
          "SecurityGroups" : { "Fn::Join" : [",", { "Ref" : "SecurityGroups" }] },
          "HostedZoneName" : { "Ref" : "PublicZoneName" },
          "SecretKeyBase" : { "Ref" : "SecretKeyBase" },
          "FcrepoUrl" : { "Fn::GetAtt" : ["fcrepo", "Outputs.URL"] },
          "SolrUrl" : { "Fn::GetAtt" : ["solr", "Outputs.URL"] },
          "ZookeeperHosts" : { "Ref" : "ZookeeperHosts" },
          "RedisHost" : { "Fn::GetAtt" : ["redis", "Outputs.EndpointAddress"] },
          "RedisPort" : { "Fn::GetAtt" : ["redis", "Outputs.EndpointPort"] },
          "RDSDatabaseName" : { "Fn::GetAtt" : ["database", "Outputs.DatabaseName"] },
          "RDSHostname" : { "Fn::GetAtt" : ["database", "Outputs.EndpointAddress"] },
          "RDSPort" : { "Fn::GetAtt" : ["database", "Outputs.EndpointPort"] },
          "RDSUsername" : { "Ref" : "DatabaseUsername" },
          "RDSPassword" : { "Ref" : "DatabasePassword" }
        },
        "TemplateURL" : { "Fn::Join" : ["", ["https://s3.amazonaws.com/", { "Ref" : "S3Bucket" }, "/stacks/webapp.json"]] }
      }
    }
  },
  "Outputs": {
    "URL" : {
      "Description" : "URL for the deployed application",
      "Value" : { "Fn::GetAtt" : ["hybox", "Outputs.URL"] }
    }
  }
}
